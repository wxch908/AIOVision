<UserControl x:Class="AIOVision.Processbar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIOVision"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--TextBox样式-->
            <Style x:Key="TxtBox" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Green"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="true">
                        <Setter Property="BorderThickness" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--TreeViewItem默认样式-->
            <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}" >
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <DockPanel LastChildFill="True" >
                                <Canvas Margin="10,0,0,0"  Background="LightGray"  Width="1" DockPanel.Dock="Left" />
                                <StackPanel  >
                                    <Canvas x:Name="Bd" 
                                            Background="{TemplateBinding Background}"  
                                            VerticalAlignment="Center" 
                                            Height="30"     
                                            UseLayoutRounding="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid  VerticalAlignment="Center" 
                                               Height="{Binding ElementName=Bd,  Path=Height}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="18" Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <!--展开收缩按钮-->
                                            <ToggleButton x:Name="ExpanderBtn"  Margin="-10,0,0,0"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" >
                                                <ToggleButton.Template>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border>
                                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                                <ToggleButton.Content>
                                                    <Image  x:Name="ExpanderIcon"  Width="24" Height="24" Margin="-10,0,0,0">
                                                    </Image>
                                                </ToggleButton.Content>
                                            </ToggleButton>
                                            <!--内容-->
                                            <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                        <Canvas Name="topLine"  Canvas.Left="13"  Canvas.Top="0" Height="1"  Background="LightGray"
                                                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}"  />
                                        <!--只有最顶级window才是最宽的-->
                                        <Canvas Name="bottomLine"  Canvas.Left="-1"  Canvas.Top="{Binding ElementName=Bd,  Path=Height}"
                                                Height="{Binding DragOverHeight}" Background="LightGray"  Margin="{Binding LastNodeMargin}"
                                                 Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}" />
                                        <!--运行时间-->
                                        <Grid Width="180" Canvas.Top="0" Canvas.Right="0"  Margin="-180,0,0,0" VerticalAlignment="Center" Height="{Binding ElementName=Bd,  Path=Height}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="45"/>
                                            </Grid.ColumnDefinitions>
                                            <!--注释-->
                                            <!--<TextBox 
                                                Grid.Column="0"
                                                Height="16"
                                                Width="40"
                                                IsReadOnly="true"
                                                Text="{Binding Remarks}"
                                                Style="{StaticResource TxtBox}">
                                                <TextBox.ContextMenu>
                                                    <ContextMenu Visibility="Collapsed"/>
                                                </TextBox.ContextMenu>
                                            </TextBox>-->
                                            <!--模块使用时间-->
                                            <TextBlock 
                                                TextAlignment="Right"  
                                                Grid.Column="1" 
                                                Text="{Binding CostTime}"  
                                                VerticalAlignment="Center" 
                                                FontSize="12" 
                                                Foreground="White" 
                                                FontStyle="Italic" />
                                            <!-- 运行状态  只有一个能同时存在-->
                                            <Image  
                                                Grid.Column="2" 
                                                Name="stateImg" 
                                                Source="{Binding StateImage}"
                                                Width="16" Height="16" 
                                                Margin="20,0,5,0" />
                                        </Grid>
                                    </Canvas>
                                    <ItemsPresenter Margin="3,0,0,0" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </StackPanel>

                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ExpanderIcon" Property="Source" Value="/AIOVision;component/FrmShow/ImgConMenu/Collapse.png" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ExpanderIcon" Property="Source" Value="/AIOVision;component/FrmShow/ImgConMenu/Expand.png" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter TargetName="Bd"  Property="Background" Value="WhiteSmoke" /> 父节点会一起变色-->
                                </Trigger>

                                <!--<Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="BlanchedAlmond" />
                                </Trigger>-->

                                <DataTrigger Binding="{Binding IsFirstNode}" Value="true">
                                    <Setter TargetName="topLine" Property="Canvas.Left" Value="-1"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsHideExpanded}"   Value="true">
                                    <Setter TargetName="ExpanderBtn" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsUse}" Value="false">
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                    <Setter  Property="Background" Value="LightGray"/>
                                    <Setter  TargetName="PART_Header"  Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRunning}" Value="true">
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                    <Setter Property="Background" Value="#5D94D6"/>
                                    <!--<Setter  TargetName="stateImg"  Property="Visibility" Value="Hidden"/>-->
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRunning}" Value="false">
                                    <Setter  TargetName="stateImg"  Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsUseSuperTool}" Value="true">
                                    <Setter Property="Background" Value="Honeydew" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsMultiSelected}" Value="true">
                                    <Setter Property="Background" Value="BlanchedAlmond" />
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                </DataTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#808080" />
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TreeView样式-->
            <Style TargetType="{x:Type TreeView}">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" VirtualizationMode="Recycling" Margin="0"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--菜单外部样式-->
            <Style TargetType="{x:Type ContextMenu}" x:Key="ContextPro">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="ContextMenu">
                            <!--背景色-->
                            <Border Name="bd" Background="#222021" BorderThickness="1" BorderBrush="Gray" Width="160">
                                <ItemsPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--中间横线-->
            <Style x:Key="SeperatorTemplate" TargetType="Separator">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="Separator">
                            <Border BorderBrush="White" BorderThickness="0 0 0 1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--内部项-->
            <Style x:Key="MenuItemTemplate" TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="MenuItem">
                            <Border Name="Bt" Height="32" Background="Transparent">
                                <Border Name="bd"  Height="32" Background="Transparent">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="img" Stretch="None" Margin="10,0,10,0" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <TextBlock x:Name="tb" Margin="0,0,10,0" Foreground="White" FontSize="13" VerticalAlignment="Center" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Border>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bt" Property="Background" Value="gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--内部项-->
            <Style x:Key="MenuItemTemplate1" TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="MenuItem">
                            <Border Name="Bt" Height="18" Background="Transparent">
                                <Border Name="bd"  Height="18" Background="Transparent">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="img" Stretch="None" Margin="10,0,10,0" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <TextBlock x:Name="tb" Margin="0,0,10,0" Foreground="White" FontSize="13" VerticalAlignment="Center" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Border>
        <Grid Background="#222021">
            <Grid.RowDefinitions>
                <RowDefinition Height="36"/>
                <RowDefinition/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <local:ControlProcess Grid.Row="0"/>
            <!--操作栏-->
            <TreeView Grid.Row="1" x:Name="ModuleTree" AllowDrop="True" FontSize="14" Background="Transparent"             
                      VirtualizingPanel.VirtualizationMode="Recycling" 
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.IsContainerVirtualizable="True" 
                      Drop="ModuleTree_Drop" 
                      DragOver="ModuleTree_DragOver" 
                      DragLeave="ModuleTree_DragLeave" 
                      MouseMove="ModuleTree_MouseMove"
                      GiveFeedback="ModuleTree_GiveFeedback"
                      PreviewKeyDown="ModuleTree_PreviewKeyDown"
                      PreviewMouseLeftButtonUp="ModuleTree_PreviewMouseLeftButtonUp"
                      PreviewMouseLeftButtonDown="ModuleTree_PreviewMouseLeftButtonDown"
                      PreviewMouseRightButtonDown="ModuleTree_PreviewMouseRightButtonDown" 
                      PreviewMouseUp="ModuleTree_PreviewMouseUp"
                      MouseDoubleClick="ModuleTree_MouseDoubleClick">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" >
                        <StackPanel 
                            MouseRightButtonUp="StackPanel_MouseRightButtonUp"
                            Orientation="Horizontal"
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},Path=Width}">
                            <Image Source="{Binding IconImage}" Width="24" Height="24"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                            </Grid>
                            <!--模块的名称-->
                            <StackPanel Orientation="Horizontal" Grid.Row="0">
                                <TextBlock Text="{Binding DispName}" Margin="10,0,0,0" VerticalAlignment="Center" Foreground="{Binding ModuleForeground}"/>
                            </StackPanel>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <Border Grid.Row="2">
                <TextBlock Name="Process_time" Text="流程总耗时：0ms" FontSize="13" VerticalAlignment="Center" Margin="5" Foreground="White"/>
            </Border>
        </Grid>
    </Border>

</UserControl>
